% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/apply.model.ml.R
\name{apply.model.ml}
\alias{apply.model.ml}
\title{Apply Machine Learning regression algorithms}
\usage{
apply.model.ml(
  spec,
  soc,
  fold.rep,
  nfold = 5,
  method = c("mars", "rf", "cubic"),
  mars.param = list(degree, nprune),
  rf.param,
  cubist.param = list(committees, neighbors),
  ext.rep = 5,
  int.rep = 5,
  validation = c("CV"),
  ...
)
}
\arguments{
\item{spec}{The spectral data used for model fitting.}

\item{soc}{The target variable (soil organic carbon) used for model fitting.}

\item{fold.rep}{A list representing the data divided into folds for cross-validation. Obtained fro the CV.folds.list function.}

\item{nfold}{The number of folds for cross-validation (default is 5).}

\item{method}{The machine learning algorithm to be used (default is c("mars", "rf", "cubic")).}

\item{mars.param}{A list of parameters for MARS algorithm, including "degree" and "nprune".}

\item{rf.param}{Parameters for random forest algorithm (e.g., number of variables to consider at each split).}

\item{cubist.param}{Parameters for Cubist algorithm, including "committees" and "neighbors".}

\item{ext.rep}{The number of repetitions for the external cross-validation loop (default is 5).}

\item{int.rep}{The number of repetitions for the internal cross-validation loop (default is 5).}

\item{validation}{The validation method, currently only supports "CV" (cross-validation).}

\item{...}{Additional arguments to be passed to the underlying model fitting functions.}
}
\value{
A list containing the predictions, fitted models, optimal parameters, and error metrics for each method.
}
\description{
Function for model building and validation using  Machine Learning regression algorithms.
}
\examples{
# Applying MARS with cross-validation
mars_params <- list(degree = 2, nprune = 5)
result <- apply.model.ml(spec, soc, fold.rep, method = "mars", mars.param = mars_params)

# Applying random forest with cross-validation
rf_params <- 1:10
result <- apply.model.ml(spec, soc, fold.rep, method = "rf", rf.param = rf_params)

# Applying Cubist with cross-validation
cubist_params <- list(committees = 5, neighbors = 10)
result <- apply.model.ml(spec, soc, fold.rep, method = "cubist", cubist.param = cubist_params)

}
