% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pp.UAVprocessing.R
\name{pp.UAVprocessing}
\alias{pp.UAVprocessing}
\title{Main processing}
\usage{
pp.UAVprocessing(
  x,
  mask_veg,
  mask_spec,
  NDVI_threshold = 0.47,
  upper_quant = 0.98,
  lower_quant = 0.02,
  correction,
  asd_data,
  srf,
  cam_type,
  path,
  corr_method
)
}
\arguments{
\item{x}{RasterBrick. The image loaded using loadimgdata()}

\item{mask_veg}{logical. If TRUE, vegetation disturbances will be masked using the NDVI and a threshold (NDVI_threshold)}

\item{mask_spec}{logical. If TRUE, spectral disturbances will be masked using the BVIS and quantiles.}

\item{NDVI_threshold}{float. Values larger than the threshsold will be masked out. Default = 0.74}

\item{upper_quant}{float. Values larger than the upper quantile will be masked out (BVIS). Default = 0.98}

\item{lower_quant}{float. Values lower than the lower quantile will be masked out (BVIS). Default = 0.02}

\item{correction}{logial. If TRUE, image correction using spectral (ASD) correction function will be conducted.}

\item{asd_data}{dataframe. The sensorjump corrected dataframe created using the loadASDdata function. Or alternatively a dataframe with the columns "ID.point", "ID.sample", "360".....(All wavelengths as numbers. Can be float or integer.).}

\item{srf}{dataframe. The dataframe created using the loadSRFdata function.}

\item{cam_type}{character. The type of camera the image was recorded with. Can be "Mica" for Micasense or "Tetra" for Tetracam.}

\item{path}{character. The file path to the shapefile containing the sampling points. It should have 4 columns in this order: xcoord, ycoord, IDplot, IDpoint.}

\item{corr_method}{character. The type of correction method that should be used. Can be "ratio" or "diff".}
}
\value{
Output:
image (state of the image depends on the previous selection: masked, corrected..) [[1]]
NDVI mask [[2]]
BVIS mask [[3]]
SRF corrected ASD data [[4]]
image spectra at SP locations [[5]]
set of corrected image values at sampling point location [[6]]
}
\description{
Method includes functions to mask the image using an NDVI and or BVIS mask generated using the given thresholds and conduct
image correction using an ASD correction function.
}
\examples{
#mask image and conduct image correction using the specified parameters
processingoutput <- pp.UAVprocessing(x=img_data_clip, mask_veg = TRUE, mask_spec = TRUE, NDVI_threshold = 0.47,
upper_quant = 0.98, lower_quant = 0.02, correction = TRUE, asd_data = asd_data_cor, srf = srf_mica,
cam_type = "Mica", path = "Path/tofile.shp", corr_method = "ratio")

#the output is a list of datastes. To get the individual datasets the elements have to be assigned to their own variable
img_data_clip_cor <- processingoutput[[1]]
NDVI_mask <- processingoutput[[2]]
BVIS_mask <- processingoutput[[3]]
asd_cam <- processingoutput[[4]]
cam_sample_pts <- processingoutput[[5]]
corimg_samp_pts <- processingoutput[[6]]


#correct image without previous masking
processingoutput <- pp.UAVprocessing(x=img_data_clip, mask_veg = FALSE, mask_spec = FALSE, correction = TRUE, asd_data = asd_data_cor, srf = srf_mica,
cam_type = "Tetra", path = "Path/tofile.shp", corr_method = "diff")


}
