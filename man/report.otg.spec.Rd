% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/report.otg.spec.R
\name{report.otg.spec}
\alias{report.otg.spec}
\title{Generate a report summarizing the results of preprocessing, modeling and spatial interpolation of on-the-go spectral data for SOC prediction.}
\usage{
report.otg.spec(
  output_dir,
  output_file,
  spectra_data = NULL,
  test_results = NULL,
  soil_data = NULL,
  sampling_points = NULL,
  pp_data = NULL,
  fold_list = NULL,
  model_pls = NULL,
  model_vg = NULL,
  model_ok = NULL
)
}
\arguments{
\item{output_dir}{The directory where the report will be saved.}

\item{output_file}{The name of the output file without the file extension.}

\item{spectra_data}{The spectral data with corrected values.}

\item{test_results}{Results of testing the spectral data.}

\item{soil_data}{The soil data used for SOC prediction.}

\item{sampling_points}{A scatter plot representing the sampling points.}

\item{pp_data}{The preprocessed spectral data.}

\item{fold_list}{The k-fold partitions for cross-validation.}

\item{model_pls}{The results of the PLS modeling.}

\item{model_vg}{The variogram model used for spatial interpolation.}

\item{model_ok}{The results of the ordinary kriging interpolation.}
}
\value{
The path to the generated PDF report.
}
\description{
This function generates a comprehensive report that presents the results obtained from applying the SOCmonit package on on-the-go spectral data for predicting Soil Organic Carbon (SOC). The report covers various aspects, such as reading and testing the spectral data, preprocessing the spectral data, reading the soil data, cross-validation strategy with k-fold partitioning, Partial Least Squares (PLS) modeling, variogram modeling and kriging spatial interpolation, and visualization of the results.
}
\details{
If TinyTeX is not installed on the system, this function will automatically install it to ensure proper LaTeX compilation for generating the report.
}
\examples{
# Generate a report with all sections
report.otg.spec(output_dir = "report", output_file = "summary",
                  spectra_data = spectra_data, test_results = test_results,
                  soil_data = soil_data, sampling_points = sampling_points,
                  pp_data = pp_data, fold_list = fold_list, model_pls = model_pls,
                  model_vg = model_vg, model_ok = model_ok)

# Generate a report with specific sections
report.otg.spec(output_dir = "report", output_file = "summary",
                  spectra_data = spectra_data, soil_data = soil_data, model_vg = model_vg)

}
